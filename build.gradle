subprojects {

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    dependencies {
        implementation "com.google.jsinterop:base:${gwt_base_version}"
        implementation "com.google.jsinterop:jsinterop:${gwt_jsinterop_version}"
        implementation "com.google.jsinterop:jsinterop-annotations:${gwt_jsinterop_annotation_version}"
        implementation "com.google.elemental2:elemental2-core:${gwt_elemental2_version}"
        implementation "com.google.elemental2:elemental2-dom:${gwt_elemental2_version}"
//    implementation "com.google.elemental2:elemental2-webstorage:${elemental2_version}"
    }

    tasks.withType(JavaCompile) {
        options.incremental = true
    }

    compileJava {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xlint:deprecation"
    }

    sourceCompatibility = "${java_lang_level}"
    targetCompatibility = "${java_lang_level}"


    repositories {
        mavenCentral()
        mavenLocal()
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html4', true)
        }
        failOnError false
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        classifier = 'javadoc'
    }

    //Include sources and soem manifest attributes into the default jar
    jar {
        manifest {
            attributes(
                    'Build-Timestamp': java.time.Instant.now().toString(),
                    'Specification-Vendor': 'peruncs.com',
                    'Implementation-Vendor': 'peruncs.com',
                    'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                    'Build-With': "Gradle ${gradle.gradleVersion}",
            )
        }
        from sourceSets.main.allSource
    }

    publishing {
        repositories {
            maven {
                url = version.endsWith('SNAPSHOT') ?
                        "https://oss.sonatype.org/content/repositories/snapshots/"
                        : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }

}

//Publishing to Maven local repo
task publishUtilsToMavenLocal {
    dependsOn ":gwt-utils:publishToMavenLocal"
}

task publishStripeToMavenLocal {
    dependsOn ":gwt-stripe:publishToMavenLocal"
}

task publishJwtToMavenLocal {
    dependsOn ":gwt-jwt:publishToMavenLocal"
}

task publishUikitToMavenLocal {
    dependsOn ":gwt-uikit:publishToMavenLocal"
}

publishStripeToMavenLocal.mustRunAfter publishUtilsToMavenLocal

task publishAllToMavenLocal {
    dependsOn publishUtilsToMavenLocal, publishStripeToMavenLocal, publishJwtToMavenLocal, publishUikitToMavenLocal
}

//Publishing to Maven central repo
task publishUtils {
    dependsOn ":gwt-utils:publish"
}

task publishStripe {
    dependsOn ":gwt-stripe:publish"
}

task publishJwt {
    dependsOn ":gwt-jwt:publish"
}

task publishUikit {
    dependsOn ":gwt-uikit:publish"
}

publishStripe.mustRunAfter publishUtils

task publishAll {
    dependsOn publishUtils, publishStripe, publishJwt, publishUikit
}
